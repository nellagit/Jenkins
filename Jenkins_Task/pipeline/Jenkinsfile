def remote = [:]
remote.name = "My_application_server"
remote.host = "3.238.193.169"
remote.allowAnyHosts = true

pipeline{
    agent any
    
    stages{
        stage('build step') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'docker_user', variable: 'DOCKER_USER'),
                        string(credentialsId: 'docker_pass', variable: 'DOCKER_PASS')]) {
                    sh "echo ${DOCKER_PASS} | docker login --username ${DOCKER_USER} --password-stdin"
                    docker.withRegistry("https://index.docker.io") {
                    def customImage = docker.build("${DOCKER_USER}/my-image:${env.BUILD_ID}", "-f Jenkins_Task/nginx/Dockerfile .")
                    customImage.push()
                    customImage.push 'latest'
                    } 
                    }
                }
            }
        }
        stage('run step') {
            steps {
                script {
                    //withCredentials([usernamePassword(credentialsId: 'new_ssh_user', passwordVariable: 'password', usernameVariable: 'userName')]) {
                    withCredentials([sshUserPrivateKey(credentialsId: 'ssh_user', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) { 
                    remote.user = userName
                    remote.identityFile = identity
                    // remote.password = 'password'
                    sshCommand remote: remote, command: '''
                        if docker ps | grep 'nginx_app'; then
                            docker rm -f nginx_app
                        fi
                    '''
                    sshCommand remote: remote, command: "docker run -tid -p 80:80 --name nginx_app nelladocker/my-image:${env.BUILD_ID}"
                    }
                }
            }
        }  
    }
}